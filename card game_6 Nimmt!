#include<stdio.h>
#include<stdlib.h>
int table[4][4];
int card[10][12];
int cnt[4]={1,1,1,1};

FILE *fw;

void bsort(int k)
{
	int i=0,j=0;
	int tmp[12];
	int m=0;
	for(i=0;i<10;i++)
		for(j=0;j<10-i-1;j++)
			if(card[j][k]>card[j+1][k])
				for(m=0;m<12;m++){
					tmp[m]=card[j][m];
					card[j][m]=card[j+1][m];
					card[j+1][m]=tmp[m];
				}
}
void print_table()
{
	int i=0;
	int j=0;
	for(j=0;j<4;j++){
		fprintf(fw,"This is %d row : ",j+1);
		for(i=0;i<4;i++){
			if(table[j][i]!=0) fprintf(fw,"%d ",table[j][i]);
		}
		fprintf(fw,"\n");
	}
}
int findMin(int j,int k,int *min)
{
	//it's j turn, k round
	int i=0;
	int putrow=-1;

	//table 0-3
	for(i=0;i<4;i++){
		//find smaller and nearest
		if((card[j][k]-table[i][cnt[i]-1])<*min && (card[j][k]-table[i][cnt[i]-1])>0){
			putrow=i;
			*min=(card[j][k]-table[i][cnt[i]-1]);
		}
	}
	//bigger than all
	if(*min==1e9){
		for(i=0;i<4;i++){
			if(cnt[i]<*min){
				*min=cnt[i];
				putrow=i;
			}
			else if(cnt[i]==*min){
				if(table[putrow][0]>table[i][0]){
					*min=cnt[i];
					putrow=i;
				}
			}
		}
		(*min)*=-1;
	}
	return putrow;
}
int main()
{
	FILE *fp;

	fp=fopen("input.txt","r");

	fscanf(fp,"%d%d%d%d",&table[0][0],&table[1][0],&table[2][0],&table[3][0]);

	int i=0,j=0;
	int k=0;
	//clear
	for(i=0;i<4;i++)for(j=1;j<4;j++) table[i][j]=0;

	//scan 100 cards
	for(i=0;i<10;i++){
		for(j=0;j<10;j++){
			fscanf(fp,"%d,",&card[i][j]);
		}
		card[i][10]=i+1;
		card[i][11]=66;
	}
	fclose(fp);
	int round=10;

	fw=fopen("result.txt","a");
	//Game start
	while(round--){
		k=10-round-1;
		bsort(k);
		for(j=0;j<10;j++){ //10 people put card
			int min=1e9;
			//find the nearest table
			int putrow=-1;

			putrow=findMin(j,k,&min);
			/*put the card*/

			//case 1: if card is smaller than all
			if(min<0){
				card[j][11]-=cnt[putrow];
				cnt[putrow]=0;
				for(i=0;i<4;i++) table[putrow][i]=0;
			}
			//case 2: if put on 5
			if(cnt[putrow]==4){
				card[j][11]-=4;
				cnt[putrow]=0;
				for(i=0;i<4;i++) table[putrow][i]=0;
			}
			table[putrow][cnt[putrow]]=card[j][k];
			cnt[putrow]++;
		}
		//print round 3 5 7 10
		if(round==9||round==8 ||round==10-3 || round==10-5 || round==10-7 || round==10-10){
			bsort(10);
			//print table
			fprintf(fw,"This is %d round\n",10-round);
			print_table();
//print card
			for(i=0;i<10;i++){
				fprintf(fw,"PlayerName: %d Point: %d\n",card[i][10],card[i][11]);
			}
			fprintf(fw,"\n");
		}
		}
	fclose(fw);
		return 0;
	}
